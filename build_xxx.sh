#
# MarketJS Deployment System
# -----------------------------------------------------------------------
# Copyright (c) 2012 MarketJS Limited. Certain portions may come from 3rd parties and
# carry their own licensing terms and are referenced where applicable.
# -----------------------------------------------------------------------

#! /bin/bash
# Usage: sh push.sh [options]
# Example: sh push.sh -b -d (bake, then deploy)

ARCHIVE_NAME=${PWD##*/}

bake (){
	echo ""
	echo "Baking ..."
	echo ""

	cd tools
	./bake.sh
	cd ..

	echo ""
	echo "Baking Done!"
	echo ""
}

compile_game (){
	echo "Compiling game.js for testing ..."
	java -jar compiler.jar \
	--warning_level=QUIET \
	--js=settings/dev.js \
	--js=media/text/strings.js \
	--js=settings/ad/mobile/preroll/themes/light/ad.js \
	--js=settings/ad/mobile/header/themes/light/ad.js \
	--js=settings/ad/mobile/footer/themes/light/ad.js \
	--js=settings/ad/mobile/end/themes/light/ad.js \
	--js=glue/jquery/jquery-3.2.1.min.js \
	--js=glue/ie/ie.js \
	--js=glue/jukebox/Player.js \
	--js=glue/howler/howler.js \
	--js=glue/font/promise.polyfill.js \
	--js=glue/font/fontfaceobserver.standalone.js \
	--js=game.min.js \
	--js_output_file=game.js \
	--language_in=ECMASCRIPT5
	echo "Done!"

	# Remove temp files
	echo "Removing game.min.js ..."
	rm game.min.js
	echo "Done!"

	echo "Done!"
}

compile_css (){
	echo "Compiling game.css for testing ..."
	sh css-append.sh
	sh css-minify.sh temp.css game.css
	sed -i.bak 's/..\/..\/..\/..\/..\/..\///g' game.css
	rm temp.css
	rm *.bak
}

compile_index (){
	echo "Done ..."

	echo "Create basic index.html ..."
	cp dev.html index.html
	echo "Done ..."

	echo "Remove fluff ..."
	sed '/<!-- SECTION GENERATED BY CODE -->/,/<!-- END OF SECTION GENERATED BY CODE -->/d' index.html > temp && mv temp index.html

	echo "Cleaning up paths ..."
	sed -n '/settings\/ad\/mobile\/preroll\/themes\/light\/ad.css/!p' index.html > temp && mv temp index.html
	sed -n '/settings\/ad\/mobile\/header\/themes\/light\/ad.css/!p' index.html > temp && mv temp index.html
	sed -n '/settings\/ad\/mobile\/footer\/themes\/light\/ad.css/!p' index.html > temp && mv temp index.html
	sed -n '/settings\/ad\/mobile\/end\/themes\/light\/ad.css/!p' index.html > temp && mv temp index.html
	sed -n '/settings\/debug\/debug.css/!p' index.html > temp && mv temp index.html
	sed -i.bak 's/main.css/game.css/g' index.html

	# Clean JS paths
	sed -n '/glue\/jquery\/jquery-3.2.1.min.js/!p' index.html > temp && mv temp index.html
	sed -i.bak 's/glue\/load\/load.js/game.js/g' index.html

	# Remove temp files
	echo "Removing temp files ..."
	rm *.bak
	rm temp
	echo "Done!"
}

remove_test_code (){
	echo "Removing test code ..."
	sed '/<!-- TEST -->/,/<!-- END OF TEST -->/d' index.html > temp && mv temp index.html
	sed -n '/test.css/!p' index.html > temp && mv temp index.html
	echo "Done!"
}


secure (){
	echo ""
	echo "Preparing domainlock ..."
	echo ""
	rm domainlock.js
	python prep_domainlock.py

	echo ""
	echo "Securing by obscuring ..."
	echo ""
	php secure_etr.php domainlock.js

	echo ""
	echo "Injecting domainlock ..."
	echo ""
	python inject_domainlock.py

	echo ""
	echo "Securing Done!"
	echo ""
	rm domainlock.js
}

gitpush (){
	git add --all
	git commit -m $1
	git push origin master
}

build_archive (){
	echo "Building archive ..."

	if [ ! -f ./$ARCHIVE_NAME.zip ];
	then
	    echo "File not found!"
	else
	echo "File exist. Removing"
	rm ./$ARCHIVE_NAME.zip
	fi

	zip -r ./$ARCHIVE_NAME.zip ./index.html ./game.js ./game.css ./branding ./media ./base-api.js ./api.js ./base-api.css ./api.css ./nobounce.min.js -x "*.zip*" -x "*.git*" -x "*.psd*" -x "*.xcf*" -x "*.aif*" -x "*.tiff*" -x "*.au*" -x "*.txt*" -x "*.bat*" -x "*.jar*" -x "*.py*" -x "*.sh*" -x "*.php*" -x "*.htaccess" -x "*.DS_Store"

	echo "Done"
}

modify_more_games (){
	echo "Creating temp_button-more-games.js ...."
	cp ./lib/game/entities/button-more-games.js ./lib/game/entities/temp_button-more-games.js

	echo "Modifying more games link the manual way ..."
	sed -f modify_more_games_link.sed ./lib/game/entities/temp_button-more-games.js > ./lib/game/entities/button-more-games.js
}

restore_more_games (){
	echo "Restore button-more-games.js ...."
	cp ./lib/game/entities/temp_button-more-games.js ./lib/game/entities/button-more-games.js
	rm ./lib/game/entities/temp_button-more-games.js
}

while getopts "l:bntahg:" opt; do
  case $opt in
	h)
		echo "Usage: sh push.sh [option]"
		echo "Deploy Options"
		echo "\t -b \t Build all files"
		echo "\t -l \t Select language by code (en,jp,kr,zh,de,es, etc ...)"
		echo "\t -a \t Upload all files"
		echo "\t -n \t Upload new (recent) files up to 12 hrs"
		echo "\t -g \t Add, commit and push to remote repo (origin)"
		echo "Working example (copy paste directly): sh push.sh -b -l jp -a -g 'somefix'"
	  ;;
	t)
	    secure
	  ;;
    l)
		echo "language to use:" $3
      ;;
    b)
		#modify_more_games
		bake
		compile_game
		# secure
		compile_css
		compile_index
		remove_test_code
		build_archive
		#restore_more_games
      ;;
    g)
		gitpush $OPTARG
      ;;
    \?)
		echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done
